;;; sinolor-themes-base.el --- basic faces for all sinolor themes -*- lexical-binding: t; -*-

;;; Commentary:
;;
;;  Basic theme configurations.
;;

;;; Code:

;; These are used as a basis for every sinolor theme defined with
;; `def-sinolor-theme', as a set of reasonble defaults. They are
;; intended to be overidden where it makes sense to.
(defvar sinolor-themes--base-faces
  '((bold        :weight  'bold :foreground (if bold 'unspecified base8))
    (italic      :slant   'italic)
    (bold-italic :inherit '(bold italic))
    (escape-glyph :foreground cyan)
    (default :background bg    :foreground fg)
    (fringe  :inherit 'default :foreground base4)
    (region              :background region :distant-foreground (sinolor-themes--darken fg 0.2) :extend t)
    (highlight           :background highlight :foreground base0 :distant-foreground base8)
    (cursor              :background highlight)
    (shadow              :foreground base5)
    (minibuffer-prompt   :foreground highlight)
    (tooltip             :background bg-alt :foreground fg)
    (secondary-selection :background grey :extend t)
    (lazy-highlight
     (&dark  :background (sinolor-themes--darken highlight 0.3)   :foreground base8 :distant-foreground base0 :weight 'bold)
     (&light :background (sinolor-themes--blend bg highlight 0.7) :foreground base0 :distant-foreground base8))
    (match                :foreground green      :background base0 :weight 'bold)
    (trailing-whitespace  :background red)
    (nobreak-space        :inherit 'escape-glyph :underline t)
    (vertical-border      :background vertical-bar :foreground vertical-bar)
    (link                 :foreground highlight :underline t :weight 'bold)
    (error   :foreground error)
    (warning :foreground warning)
    (success :foreground success)
;;;; font-lock-* faces
    (font-lock-builtin-face              :foreground builtin)
    (font-lock-comment-face              :foreground comments)
    (font-lock-comment-delimiter-face    :inherit 'font-lock-comment-face)
    (font-lock-doc-face                  :inherit 'font-lock-comment-face :foreground doc-comments)
    (font-lock-constant-face             :foreground constants)
    (font-lock-function-name-face        :foreground functions)
    (font-lock-keyword-face              :foreground keywords)
    (font-lock-negation-char-face        :inherit 'bold :foreground operators)
    (font-lock-number-face               :foreground numbers)
    (font-lock-preprocessor-face         :inherit 'bold :foreground operators)
    (font-lock-preprocessor-char-face    :inherit 'bold :foreground operators)
    (font-lock-regexp-grouping-backslash :inherit 'bold :foreground operators)
    (font-lock-regexp-grouping-construct :inherit 'bold :foreground operators)
    (font-lock-string-face               :foreground strings)
    (font-lock-type-face                 :foreground type)
    (font-lock-variable-name-face        :foreground variables)
    (font-lock-warning-face              :inherit 'warning)
;;;; line numbers
    ;; 1. Line number faces must explicitly disable its text style
    ;;    attributes because nearby faces may "bleed" into the line
    ;;    numbers otherwise.
    ;; 2. All other line number plugin faces should &inherit from
    ;;    these.
    (line-number
     :inherit 'default
     :foreground base5 :distant-foreground 'unspecified
     :weight 'normal :italic 'unspecified
     :underline 'unspecified :strike-through 'unspecified)
    (line-number-current-line
     :inherit '(hl-line default)
     :foreground fg :distant-foreground 'unspecified
     :weight 'normal :italic 'unspecified
     :underline 'unspecified :strike-through 'unspecified)
;;;; mode-line / header-line
    (header-line :inherit 'mode-line)
    (header-line-highlight :inherit 'mode-line-highlight)
    (mode-line :background bg :foreground fg :distant-foreground bg)
    (mode-line-active    :inherit 'mode-line)
    (mode-line-inactive  :background bg-alt :foreground fg-alt :distant-foreground bg-alt)
    (mode-line-emphasis  :foreground highlight :distant-foreground bg)
    (mode-line-highlight :inherit 'highlight :distant-foreground bg)
    (mode-line-buffer-id :weight 'bold)
;;;; tab-line/tab-bar
    (tab-line :background bg-alt :foreground bg-alt)
    (tab-line-tab :background bg :foreground fg)
    (tab-line-tab-inactive :inherit 'tab-line-tab :background bg-alt :foreground fg-alt)
    (tab-line-tab-inactive-alternate :inherit 'tab-line-tab-inactive)
    (tab-line-tab-current :background bg :foreground fg)
    (tab-line-highlight :inherit 'tab-line-tab)
    (tab-line-close-highlight :foreground highlight)
    ((tab-bar &inherit tab-line))
    ((tab-bar-tab &inherit tab-line-tab))
    ((tab-bar-tab-inactive &inherit tab-line-tab-inactive))

;;;; package faces
    ;; Headings are formatted as such:
    ;;
    ;;   PACKAGE [<built-in>] [<modes:some-mode[, ...]>]
    ;;
    ;; The purpose of this is to make it easy to jump to via `imenu',
    ;; or search for with isearch, swiper, etc.

;;;; alert
    (alert-high-face         :inherit bold :foreground warning)
    (alert-low-face          :foreground grey)
    (alert-moderate-face     :inherit bold :foreground fg-alt)
    (alert-trivial-face      :foreground doc-comments)
    (alert-urgent-face       :inherit bold :foreground error)
;;;; all-the-icons
    (all-the-icons-blue       :foreground blue)
    (all-the-icons-blue-alt   :foreground teal)
    (all-the-icons-cyan       :foreground cyan)
    (all-the-icons-cyan-alt   :foreground cyan)
    (all-the-icons-dblue      :foreground dark-blue)
    (all-the-icons-dcyan      :foreground dark-cyan)
    (all-the-icons-dgreen     :foreground (sinolor-themes--darken green 0.3))
    (all-the-icons-dmaroon    :foreground (sinolor-themes--darken magenta 0.3))
    (all-the-icons-dorange    :foreground (sinolor-themes--darken orange 0.3))
    (all-the-icons-dpink      :foreground (sinolor-themes--lighten red 0.15))
    (all-the-icons-dpurple    :foreground (sinolor-themes--darken violet 0.3))
    (all-the-icons-dred       :foreground (sinolor-themes--darken red 0.3))
    (all-the-icons-dsilver    :foreground (sinolor-themes--lighten grey 0.1))
    (all-the-icons-dyellow    :foreground (sinolor-themes--darken yellow 0.3))
    (all-the-icons-green      :foreground green)
    (all-the-icons-lblue      :foreground (sinolor-themes--lighten blue 0.3))
    (all-the-icons-lcyan      :foreground (sinolor-themes--lighten cyan 0.3))
    (all-the-icons-lgreen     :foreground (sinolor-themes--lighten green 0.3))
    (all-the-icons-lmaroon    :foreground (sinolor-themes--lighten magenta 0.3))
    (all-the-icons-lorange    :foreground (sinolor-themes--lighten orange 0.3))
    (all-the-icons-lpink      :foreground (sinolor-themes--lighten red 0.55))
    (all-the-icons-lpurple    :foreground (sinolor-themes--lighten violet 0.3))
    (all-the-icons-lred       :foreground (sinolor-themes--lighten red 0.3))
    (all-the-icons-lsilver    :foreground (sinolor-themes--lighten grey 0.7))
    (all-the-icons-lyellow    :foreground (sinolor-themes--lighten yellow 0.3))
    (all-the-icons-maroon     :foreground magenta)
    (all-the-icons-orange     :foreground orange)
    (all-the-icons-pink       :foreground (sinolor-themes--lighten red 0.35))
    (all-the-icons-purple     :foreground violet)
    (all-the-icons-purple-alt :foreground (sinolor-themes--blend violet grey 0.15))
    (all-the-icons-red        :foreground red)
    (all-the-icons-red-alt    :foreground (sinolor-themes--blend red grey 0.15))
    (all-the-icons-silver     :foreground (sinolor-themes--lighten grey 0.45))
    (all-the-icons-yellow     :foreground yellow)
;;;; all-the-icons-dired
    (all-the-icons-dired-dir-face :foreground doc-comments)
;;;; annotate
    (annotate-annotation           :background (sinolor-themes--blend highlight bg 0.1) :foreground doc-comments)
    (annotate-annotation-secondary :background (sinolor-themes--blend green bg 0.1)     :foreground doc-comments)
    (annotate-highlight            :background (sinolor-themes--blend highlight bg 0.1) :underline highlight)
    (annotate-highlight-secondary  :background (sinolor-themes--blend green bg 0.1)     :underline green)
;;;; ansi-color <built-in>
    (ansi-color-black          :foreground bg      :background bg)
    (ansi-color-red            :foreground red     :background red)
    (ansi-color-green          :foreground green   :background green)
    (ansi-color-yellow         :foreground yellow  :background yellow)
    (ansi-color-blue           :foreground blue    :background blue)
    (ansi-color-magenta        :foreground magenta :background magenta)
    (ansi-color-cyan           :foreground cyan    :background cyan)
    (ansi-color-white          :foreground fg      :background fg)
    (ansi-color-bright-black   :foreground base0   :background base2)
    (ansi-color-bright-red     :foreground (sinolor-themes--lighten red 0.15)     :background (sinolor-themes--lighten red 0.15))
    (ansi-color-bright-green   :foreground (sinolor-themes--lighten green 0.15)   :background (sinolor-themes--lighten green 0.15))
    (ansi-color-bright-yellow  :foreground (sinolor-themes--lighten yellow 0.15)  :background (sinolor-themes--lighten yellow 0.15))
    (ansi-color-bright-blue    :foreground (sinolor-themes--lighten blue 0.15)    :background (sinolor-themes--lighten blue 0.15))
    (ansi-color-bright-magenta :foreground (sinolor-themes--lighten magenta 0.15) :background (sinolor-themes--lighten magenta 0.15))
    (ansi-color-bright-cyan    :foreground (sinolor-themes--lighten cyan 0.15)    :background (sinolor-themes--lighten cyan 0.15))
    (ansi-color-bright-white   :foreground base8   :background base8)
;;;; anzu
    (anzu-replace-highlight :background base0 :foreground red   :weight 'bold :strike-through t)
    (anzu-replace-to        :background base0 :foreground green :weight 'bold)
;;;; auctex <modes:latex-mode>
    (font-latex-bold-face         :inherit 'bold)
    (font-latex-italic-face       :inherit 'italic)
    (font-latex-math-face         :foreground blue)
    (font-latex-sectioning-0-face :foreground blue    :weight 'ultra-bold)
    (font-latex-sectioning-1-face :foreground magenta :weight 'semi-bold)
    (font-latex-sectioning-2-face :foreground violet  :weight 'semi-bold)
    (font-latex-sectioning-3-face :foreground (sinolor-themes--lighten blue 0.3)    :weight 'semi-bold)
    (font-latex-sectioning-4-face :foreground (sinolor-themes--lighten magenta 0.3) :weight 'semi-bold)
    (font-latex-sectioning-5-face :foreground (sinolor-themes--lighten violet 0.3)  :weight 'semi-bold)
    (font-latex-script-char-face  :foreground dark-blue)
    (font-latex-string-face       :inherit 'font-lock-string-face)
    (font-latex-warning-face      :inherit 'font-lock-warning-face)
    (font-latex-verbatim-face     :inherit 'fixed-pitch :foreground violet :slant 'italic)
    (TeX-error-description-error    :inherit 'error   :weight 'bold)
    (TeX-error-description-warning  :inherit 'warning :weight 'bold)
    (TeX-error-description-tex-said :inherit 'success :weight 'bold)
;;;; avy
    (avy-background-face :foreground comments)
    (avy-lead-face :background highlight :foreground bg :distant-foreground fg :weight 'bold)
    (avy-lead-face-0
     (&all   :inherit 'avy-lead-face)
     (&dark  :background (sinolor-themes--lighten highlight 0.3))
     (&light :background (sinolor-themes--darken highlight 0.3)))
    (avy-lead-face-1
     (&all   :inherit 'avy-lead-face)
     (&dark  :background (sinolor-themes--lighten highlight 0.6))
     (&light :background (sinolor-themes--darken highlight 0.6)))
    (avy-lead-face-2
     (&all   :inherit 'avy-lead-face)
     (&dark  :background (sinolor-themes--lighten highlight 0.9))
     (&light :background (sinolor-themes--darken highlight 0.9)))
;;;; bookmark <built-in>
    (bookmark-face :background (sinolor-themes--blend highlight bg 0.1) :extend t)
;;;; company
    (company-tooltip        :inherit 'tooltip)
    (company-tooltip-common :foreground highlight :distant-foreground base0 :weight 'bold)
    (company-tooltip-search :background highlight :foreground bg :distant-foreground fg :weight 'bold)
    (company-tooltip-search-selection :background (sinolor-themes--darken selection 0.25))
    (company-tooltip-selection  :background selection :weight 'bold)
    (company-tooltip-mouse      :background magenta   :foreground bg :distant-foreground fg)
    (company-tooltip-annotation :foreground violet    :distant-foreground bg)
    (company-scrollbar-bg       :inherit 'tooltip)
    (company-scrollbar-fg       :background highlight)
    (company-preview                              :foreground comments)
    (company-preview-common     :background base3 :foreground highlight)
    (company-preview-search     :inherit 'company-tooltip-search)
    (company-template-field     :inherit 'match)
;;;; company-box
    (company-box-candidate :foreground fg)
;;;; compilation <built-in>
    (compilation-column-number  :inherit 'font-lock-comment-face)
    (compilation-line-number    :foreground highlight)
    (compilation-error   :inherit 'error   :weight 'bold)
    (compilation-warning :inherit 'warning :slant 'italic)
    (compilation-info    :inherit 'success)
    (compilation-mode-line-exit :inherit 'compilation-info)
    (compilation-mode-line-fail :inherit 'compilation-error)
;;;; corfu
    (corfu-default :inherit 'tooltip)
    (corfu-current :background bg :foreground fg)
;;;; cperl <built-in>
    (cperl-array-face          :weight 'bold :inherit 'font-lock-variable-name-face)
    (cperl-hash-face           :weight 'bold :slant 'italic :inherit 'font-lock-variable-name-face)
    (cperl-nonoverridable-face :inherit 'font-lock-builtin-face)
;;;; custom <built-in>
    (custom-button            :foreground blue :background bg   :box '(:line-width 1 :style released-button))
    (custom-button-mouse      :foreground bg   :background blue :box '(:line-width 1 :style released-button))
    (custom-button-pressed    :foreground bg   :background blue :box '(:line-width 1 :style pressed-button))
    (custom-changed           :foreground blue :background bg)
    (custom-comment           :foreground fg   :background region)
    (custom-comment-tag       :foreground grey)
    (custom-group-subtitle    :foreground red)
    (custom-group-tag         :foreground violet)
    (custom-group-tag-1       :foreground blue)
    (custom-invalid           :foreground red    :background (sinolor-themes--blend red bg 0.2))
    (custom-modified          :foreground blue   :background (sinolor-themes--blend blue bg 0.2))
    (custom-saved             :foreground green  :background (sinolor-themes--blend green bg 0.2) :bold 'inherit)
    (custom-set               :foreground yellow :background bg)
    (custom-state             :foreground green  :background (sinolor-themes--blend green bg 0.2))
    (custom-themed            :foreground yellow :background bg)
    (custom-variable-button   :foreground green  :underline t)
    (custom-variable-obsolete :foreground grey   :background bg)
    (custom-variable-tag      :foreground magenta)
    (custom-visibility        :foreground blue)
;;;; cider
    ;; (cider-stacktrace-error-class-face :inherit 'font-lock-warning-face)
    ;; (cider-stacktrace-error-message-face :inherit 'font-lock-doc-face)
    ;; (cider-stacktrace-filter-active-face :inherit 'button :underline t :weight 'normal)
    ;; (cider-stacktrace-filter-inactive-face :inherit 'cider-stacktrace-filter-active-face)
    ;; (cider-stacktrace-face :inherit 'default)
    ;; (cider-stacktrace-ns-face :inherit 'font-lock-comment-face)
    ;; (cider-stacktrace-fn-face :inherit 'default :weight 'bold)
    ;; (cider-docview-emphasis-face :inherit 'default :underline t)
    ;; (cider-docview-strong-face :inherit 'default :underline t :weight 'bold)
    ;; (cider-docview-literal-face :inherit 'font-lock-string-face)
    ;; (cider-docview-table-border-face :inherit 'shadow)
    (cider-debug-code-overlay-face :background base3)
    ;; (cider-debug-prompt-face :inherit font-lock-builtin-face :underline t)
    (cider-enlightened-face
     :inherit 'cider-result-overlay-face :box `(:color ,orange :line-width -1))
    (cider-enlightened-local-face :foreground orange :weight 'bold)
    ;; (cider-repl-prompt-face :inherit 'font-lock-keyword-face)
    ;; (cider-repl-stdout-face :inherit 'font-lock-string-face)
    ;; (cider-repl-stderr-face :inherit 'font-lock-warning-face)
    ;; (cider-repl-input-face :weight 'bold)
    ;; (cider-repl-result-face )
    (cider-result-overlay-face :background base3 :box `(:line-width -1 :color ,base5))
    (cider-fringe-good-face    :foreground green)
    (cider-deprecated-face     :background (sinolor-themes--blend bg yellow 0.8))
    (cider-instrumented-face   :background (sinolor-themes--blend bg red 0.8))
    (cider-traced-face         :background (sinolor-themes--blend bg cyan 0.8))
    ;; (cider-reader-conditional-face :inherit 'font-lock-comment-face)
    (cider-error-highlight-face
     `((((supports :underline (:style wave)))
        (:underline (:style wave :color ,(car error))))
       (t (:inherit font-lock-warning-face :underline t))))
    (cider-warning-highlight-face
     `((((supports :underline (:style wave)))
        (:underline (:style wave :color ,(car warning))))
       (t (:inherit font-lock-warning-face :underline (:color ,(car warning))))))
    (cider-test-failure-face :background (sinolor-themes--blend bg error 0.7))
    (cider-test-error-face   :background orange)
    (cider-test-success-face
     (&light :foreground base0 :background green)
     (&dark  :foreground green :background base0))
;;;; diff-hl
    (diff-hl-change :foreground vc-modified :background vc-modified)
    (diff-hl-delete :foreground vc-deleted :background vc-deleted)
    (diff-hl-insert :foreground vc-added :background vc-added)
;;;; diff-mode <built-in>
    (diff-added   :inherit 'hl-line :foreground green)
    (diff-changed :foreground violet)
    (diff-context
     (&dark  :foreground (sinolor-themes--darken fg 0.12))
     (&light :foreground (sinolor-themes--lighten fg 0.12)))
    (diff-removed :foreground red :background base3)
    (diff-header  :foreground cyan)
    (diff-file-header :foreground blue)
    (diff-hunk-header :foreground violet)
    (diff-refine-added   :inherit 'diff-added :inverse-video t)
    (diff-refine-changed :inherit 'diff-changed :inverse-video t)
    (diff-refine-removed :inherit 'diff-removed :inverse-video t)
;;;; dired <built-in>
    (dired-directory  :foreground builtin)
    (dired-ignored    :foreground comments)
    (dired-flagged    :foreground red)
    (dired-header     :foreground blue :weight 'bold)
    (dired-mark       :foreground orange :weight 'bold)
    (dired-marked     :foreground magenta :weight 'bold :inverse-video t)
    (dired-perm-write :foreground fg :underline t)
    (dired-symlink    :foreground cyan :weight 'bold)
    (dired-warning    :foreground warning)
;;;; ediff <built-in>
    (ediff-fine-diff-A    :background (sinolor-themes--blend selection bg 0.7) :weight 'bold :extend t)
    (ediff-fine-diff-B    :inherit 'ediff-fine-diff-A)
    (ediff-fine-diff-C    :inherit 'ediff-fine-diff-A)
    (ediff-current-diff-A :background (sinolor-themes--blend selection bg 0.3) :extend t)
    (ediff-current-diff-B :inherit 'ediff-current-diff-A)
    (ediff-current-diff-C :inherit 'ediff-current-diff-A)
    (ediff-even-diff-A    :inherit 'hl-line)
    (ediff-even-diff-B    :inherit 'ediff-even-diff-A)
    (ediff-even-diff-C    :inherit 'ediff-even-diff-A)
    (ediff-odd-diff-A     :inherit 'ediff-even-diff-A)
    (ediff-odd-diff-B     :inherit 'ediff-odd-diff-A)
    (ediff-odd-diff-C     :inherit 'ediff-odd-diff-A)
;;;; elfeed
    (elfeed-log-debug-level-face :foreground comments)
    (elfeed-log-error-level-face :inherit 'error)
    (elfeed-log-info-level-face  :inherit 'success)
    (elfeed-log-warn-level-face  :inherit 'warning)
    (elfeed-search-date-face     :foreground violet)
    (elfeed-search-feed-face     :foreground blue)
    (elfeed-search-tag-face      :foreground comments)
    (elfeed-search-title-face    :foreground comments)
    (elfeed-search-filter-face   :foreground violet)
    (elfeed-search-unread-count-face :foreground yellow)
    (elfeed-search-unread-title-face :foreground fg :weight 'bold)
;;;; embark
    ((embark-target &inherit vertico-current))
;;;; erc <built-in>
    (erc-button :weight 'bold :underline t)
    (erc-default-face :inherit 'default)
    (erc-action-face  :weight 'bold)
    (erc-command-indicator-face :weight 'bold)
    (erc-direct-msg-face :foreground magenta)
    (erc-error-face :inherit 'error)
    (erc-header-line :background (sinolor-themes--darken bg-alt 0.15) :foreground highlight)
    (erc-input-face :foreground green)
    (erc-current-nick-face :foreground green :weight 'bold)
    (erc-timestamp-face :foreground blue :weight 'bold)
    (erc-nick-default-face :weight 'bold)
    (erc-nick-msg-face :foreground magenta)
    (erc-nick-prefix-face :inherit 'erc-nick-default-face)
    (erc-my-nick-face :foreground green :weight 'bold)
    (erc-my-nick-prefix-face :inherit 'erc-my-nick-face)
    (erc-notice-face :foreground comments)
    (erc-prompt-face :foreground highlight :weight 'bold)
;;;; eshell <built-in>
    (eshell-prompt        :foreground highlight :weight 'bold)
    (eshell-ls-archive    :foreground magenta)
    (eshell-ls-backup     :foreground yellow)
    (eshell-ls-clutter    :foreground red)
    (eshell-ls-directory  :foreground blue)
    (eshell-ls-executable :foreground green)
    (eshell-ls-missing    :foreground red)
    (eshell-ls-product    :foreground orange)
    (eshell-ls-readonly   :foreground orange)
    (eshell-ls-special    :foreground violet)
    (eshell-ls-symlink    :foreground cyan)
    (eshell-ls-unreadable :foreground base5)
;;;; evil
    (evil-ex-info                   :foreground error :slant 'italic)
    (evil-ex-search                 :background highlight :foreground base0 :weight 'bold)
    (evil-ex-substitute-matches     :background base0     :foreground red   :weight 'bold :strike-through t)
    (evil-ex-substitute-replacement :background base0     :foreground green :weight 'bold)
    (evil-search-highlight-persist-highlight-face :inherit 'lazy-highlight)
;;;; eww <built-in>
    (eww-form-checkbox :inherit 'eww-form-file)
    (eww-form-file   :inherit 'eww-form-submit :background bg-alt)
    (eww-form-select :inherit 'eww-form-submit :background bg-alt)
    (eww-form-submit :inherit 'eww-form-text :box `(:line-width 2 :style released-button) :background base2)
    (eww-form-text :box `(:line-width 1 :color ,base3) :background bg :foreground fg :distant-foreground bg)
    (eww-form-textarea :inherit 'eww-form-text)
    (eww-invalid-certificate :foreground error)
    (eww-valid-certificate :foreground highlight)
;;;; flx-ido
    (flx-highlight-face :weight 'bold :foreground yellow)
;;;; flycheck
    (flycheck-error          :underline `(:style wave :color ,red))
    (flycheck-warning        :underline `(:style wave :color ,yellow))
    (flycheck-info           :underline `(:style wave :color ,green))
    (flycheck-fringe-error   :inherit 'fringe :foreground error)
    (flycheck-fringe-warning :inherit 'fringe :foreground warning)
    (flycheck-fringe-info    :inherit 'fringe :foreground success)
;;;; flycheck-posframe
    (flycheck-posframe-face            :inherit 'default)
    (flycheck-posframe-background-face :background bg-alt)
    (flycheck-posframe-error-face      :inherit 'flycheck-posframe-face :foreground error)
    (flycheck-posframe-info-face       :inherit 'flycheck-posframe-face :foreground fg)
    (flycheck-posframe-warning-face    :inherit 'flycheck-posframe-face :foreground warning)
;;;; flymake
    (flymake-error   :underline `(:style wave :color ,red))
    (flymake-note    :underline `(:style wave :color ,green))
    (flymake-warning :underline `(:style wave :color ,orange))
;;;; flyspell <built-in>
    (flyspell-incorrect :underline `(:style wave :color ,error))
    (flyspell-duplicate :underline `(:style wave :color ,warning))
;;;; gnus (built-in)
    (gnus-group-mail-1           :weight 'bold :foreground fg)
    (gnus-group-mail-2           :inherit 'gnus-group-mail-1)
    (gnus-group-mail-3           :inherit 'gnus-group-mail-1)
    (gnus-group-mail-1-empty     :foreground base5)
    (gnus-group-mail-2-empty     :inherit 'gnus-group-mail-1-empty)
    (gnus-group-mail-3-empty     :inherit 'gnus-group-mail-1-empty)
    (gnus-group-news-1           :inherit 'gnus-group-mail-1)
    (gnus-group-news-2           :inherit 'gnus-group-news-1)
    (gnus-group-news-3           :inherit 'gnus-group-news-1)
    (gnus-group-news-4           :inherit 'gnus-group-news-1)
    (gnus-group-news-5           :inherit 'gnus-group-news-1)
    (gnus-group-news-6           :inherit 'gnus-group-news-1)
    (gnus-group-news-1-empty     :inherit 'gnus-group-mail-1-empty)
    (gnus-group-news-2-empty     :inherit 'gnus-group-news-1-empty)
    (gnus-group-news-3-empty     :inherit 'gnus-group-news-1-empty)
    (gnus-group-news-4-empty     :inherit 'gnus-group-news-1-empty)
    (gnus-group-news-5-empty     :inherit 'gnus-group-news-1-empty)
    (gnus-group-news-6-empty     :inherit 'gnus-group-news-1-empty)
    (gnus-group-mail-low         :inherit 'gnus-group-mail-1 :weight 'normal)
    (gnus-group-mail-low-empty   :inherit 'gnus-group-mail-1-empty)
    (gnus-group-news-low         :inherit 'gnus-group-mail-1 :foreground base5)
    (gnus-group-news-low-empty   :inherit 'gnus-group-news-low :weight 'normal)
    (gnus-header-content         :inherit 'message-header-other)
    (gnus-header-from            :inherit 'message-header-other)
    (gnus-header-name            :inherit 'message-header-name)
    (gnus-header-newsgroups      :inherit 'message-header-other)
    (gnus-header-subject         :inherit 'message-header-subject)
    (gnus-summary-cancelled      :foreground red :strike-through t)
    (gnus-summary-high-ancient   :foreground (sinolor-themes--lighten base5 0.2) :inherit 'italic)
    (gnus-summary-high-read      :foreground (sinolor-themes--lighten fg 0.2))
    (gnus-summary-high-ticked    :foreground (sinolor-themes--lighten magenta 0.2))
    (gnus-summary-high-unread    :foreground (sinolor-themes--lighten green 0.2))
    (gnus-summary-low-ancient    :foreground (sinolor-themes--darken base5 0.2) :inherit 'italic)
    (gnus-summary-low-read       :foreground (sinolor-themes--darken fg 0.2))
    (gnus-summary-low-ticked     :foreground (sinolor-themes--darken magenta 0.2))
    (gnus-summary-low-unread     :foreground (sinolor-themes--darken green 0.2))
    (gnus-summary-normal-ancient :foreground base5 :inherit 'italic)
    (gnus-summary-normal-read    :foreground fg)
    (gnus-summary-normal-ticked  :foreground magenta)
    (gnus-summary-normal-unread  :foreground green :inherit 'bold)
    (gnus-summary-selected       :foreground blue :weight 'bold)
    (gnus-cite-1                 :foreground violet)
    (gnus-cite-2                 :foreground yellow)
    (gnus-cite-3                 :foreground magenta)
    (gnus-cite-4                 :foreground green)
    (gnus-cite-5                 :foreground green)
    (gnus-cite-6                 :foreground green)
    (gnus-cite-7                 :foreground magenta)
    (gnus-cite-8                 :foreground magenta)
    (gnus-cite-9                 :foreground magenta)
    (gnus-cite-10                :foreground yellow)
    (gnus-cite-11                :foreground yellow)
    (gnus-signature              :foreground yellow)
    (gnus-x-face                 :background base5 :foreground fg)
;;;; helpful
    (helpful-heading :weight 'bold :height 1.2)
;;;; hi-lock <built-in>
    (hi-yellow   :background yellow)
    (hi-pink     :background magenta)
    (hi-red-b    :foreground red :weight 'bold)
    (hi-green    :background green)
    (hi-green-b  :foreground green :weight 'bold)
    (hi-blue     :background blue)
    (hi-blue-b   :foreground blue :weight 'bold)
    (hi-black-b  :weight 'bold)
    (hi-black-hb :inherit 'variable-pitch :weight 'bold :height 1.67)
;;;; hl-line (built-in)
    (hl-line :background bg-alt :extend t)
;;;; hl-todo
    (hl-todo :foreground red :weight 'bold)
;;;; ido <built-in>
    (ido-first-match :foreground orange)
    (ido-indicator   :foreground red :background bg)
    (ido-only-match  :foreground green)
    (ido-subdir      :foreground violet)
    (ido-virtual     :foreground comments)
;;;; iedit
    (iedit-occurrence :foreground magenta :weight 'bold :inverse-video t)
    (iedit-read-only-occurrence :inherit 'region)
;;;; imenu-list
    ;; (imenu-list-entry-face)
    (imenu-list-entry-face-0 :foreground highlight)
    (imenu-list-entry-subalist-face-0 :inherit 'imenu-list-entry-face-0 :weight 'bold)
    (imenu-list-entry-face-1 :foreground green)
    (imenu-list-entry-subalist-face-1 :inherit 'imenu-list-entry-face-1 :weight 'bold)
    (imenu-list-entry-face-2 :foreground yellow)
    (imenu-list-entry-subalist-face-2 :inherit 'imenu-list-entry-face-2 :weight 'bold)
;;;; isearch <built-in>
    (isearch :inherit 'lazy-highlight :weight 'bold)
    (isearch-fail :background error :foreground base0 :weight 'bold)
;;;; linum <built-in>
    ((linum &inherit line-number))
;;;; magit
    (magit-bisect-bad        :foreground red)
    (magit-bisect-good       :foreground green)
    (magit-bisect-skip       :foreground orange)
    (magit-blame-hash        :foreground cyan)
    (magit-blame-date        :foreground red)
    (magit-blame-heading     :foreground orange :background base3 :extend t)
    (magit-branch-current    :foreground blue)
    (magit-branch-local      :foreground cyan)
    (magit-branch-remote     :foreground green)
    (magit-cherry-equivalent :foreground violet)
    (magit-cherry-unmatched  :foreground cyan)
    (magit-diff-added             :foreground (sinolor-themes--darken vc-added 0.2) :background (sinolor-themes--blend vc-added bg 0.1) :extend t)
    (magit-diff-added-highlight   :foreground vc-added                              :background (sinolor-themes--blend vc-added bg 0.2) :weight 'bold :extend t)
    (magit-diff-base              :foreground (sinolor-themes--darken vc-modified 0.2) :background (sinolor-themes--blend vc-modified bg 0.1) :extend t)
    (magit-diff-base-highlight    :foreground vc-modified                              :background (sinolor-themes--blend vc-modified bg 0.2) :weight 'bold :extend t)
    (magit-diff-context           :foreground (sinolor-themes--darken fg 0.4) :background bg :extend t)
    (magit-diff-context-highlight :foreground fg                   :background bg-alt :extend t)
    (magit-diff-file-heading           :foreground fg :weight 'bold :extend t)
    (magit-diff-file-heading-selection :foreground magenta               :background dark-blue :weight 'bold :extend t)
    (magit-diff-hunk-heading           :foreground bg                    :background (sinolor-themes--blend violet bg 0.8) :extend t)
    (magit-diff-hunk-heading-highlight :foreground bg                    :background violet :weight 'bold :extend t)
    (magit-diff-lines-heading          :foreground yellow :background red :extend t :extend t)
    (magit-diff-removed                :foreground (sinolor-themes--darken vc-deleted 0.2) :background (sinolor-themes--blend vc-deleted base3 0.1) :extend t)
    (magit-diff-removed-highlight      :foreground vc-deleted                              :background (sinolor-themes--blend vc-deleted base3 0.2) :weight 'bold :extend t)
    (magit-diffstat-added              :foreground vc-added)
    (magit-diffstat-removed            :foreground vc-deleted)
    (magit-dimmed :foreground comments)
    (magit-filename :foreground violet)
    (magit-hash :foreground comments)
    (magit-header-line :background dark-blue :foreground base8 :weight 'bold
                       :box `(:line-width 3 :color ,dark-blue))
    (magit-log-author :foreground orange)
    (magit-log-date :foreground blue)
    (magit-log-graph :foreground comments)
    (magit-process-ng :inherit 'error)
    (magit-process-ok :inherit 'success)
    (magit-reflog-amend :foreground magenta)
    (magit-reflog-checkout :foreground blue)
    (magit-reflog-cherry-pick :foreground green)
    (magit-reflog-commit :foreground green)
    (magit-reflog-merge :foreground green)
    (magit-reflog-other :foreground cyan)
    (magit-reflog-rebase :foreground magenta)
    (magit-reflog-remote :foreground cyan)
    (magit-reflog-reset :inherit 'error)
    (magit-refname :foreground comments)
    (magit-section-heading :foreground blue :weight 'bold :extend t)
    (magit-section-heading-selection :foreground orange :weight 'bold :extend t)
    (magit-section-highlight :inherit 'hl-line)
    (magit-section-secondary-heading :foreground violet :weight 'bold :extend t)
    (magit-sequence-drop :foreground red)
    (magit-sequence-head :foreground blue)
    (magit-sequence-part :foreground orange)
    (magit-sequence-stop :foreground green)
    (magit-signature-bad :inherit 'error)
    (magit-signature-error :inherit 'error)
    (magit-signature-expired :foreground orange)
    (magit-signature-good :inherit 'success)
    (magit-signature-revoked :foreground magenta)
    (magit-signature-untrusted :foreground yellow)
    (magit-tag :foreground yellow)
;;;; make-mode <built-in> <modes:makefile-mode, makefile-automake-mode, makefile-makepp-mode, makefile-gmake-mode, makefile-imake-mode, makefile-bsdmake-mode>
    (makefile-targets :foreground blue)
;;;; man <built-in> <mode:Man-mode>
    (Man-overstrike :inherit 'bold :foreground operators)
    (Man-underline :inherit 'underline :foreground keywords)
;;;; marginalia
    (marginalia-documentation   :inherit 'font-lock-doc-face)
    (marginalia-file-priv-dir   :foreground blue)
    (marginalia-file-priv-exec  :foreground green)
    (marginalia-file-priv-link  :foreground violet)
    (marginalia-file-priv-other :foreground magenta)
    (marginalia-file-priv-rare  :foreground fg)
    (marginalia-file-priv-read  :foreground yellow)
    (marginalia-file-priv-write :foreground red)
    (marginalia-number          :foreground numbers)
    (marginalia-size            :foreground violet)
    (marginalia-lighter         :foreground violet)
;;;; markdown-mode <modes:markdown-mode,gfm-mode>
    (markdown-header-face           :inherit 'bold :foreground highlight)
    (markdown-header-delimiter-face :inherit 'markdown-header-face)
    (markdown-metadata-key-face     :foreground red)
    (markdown-list-face             :foreground red)
    (markdown-link-face             :foreground highlight)
    (markdown-url-face              :foreground magenta :weight 'normal)
    (markdown-italic-face           :inherit 'italic :foreground violet)
    (markdown-bold-face             :inherit 'bold   :foreground orange)
    (markdown-markup-face           :foreground operators)
    (markdown-blockquote-face       :inherit 'italic :foreground doc-comments)
    (markdown-pre-face              :foreground strings)
    (markdown-code-face             :background base3 :extend t)
    (markdown-reference-face        :foreground doc-comments)
    (markdown-inline-code-face      :inherit '(markdown-code-face markdown-pre-face) :extend 'unspecified)
    (markdown-html-attr-name-face     :inherit 'font-lock-variable-name-face)
    (markdown-html-attr-value-face    :inherit 'font-lock-string-face)
    (markdown-html-entity-face        :inherit 'font-lock-variable-name-face)
    (markdown-html-tag-delimiter-face :inherit 'markdown-markup-face)
    (markdown-html-tag-name-face      :inherit 'font-lock-keyword-face)
;;;; message <built-in>
    (message-header-name       :foreground green)
    (message-header-subject    :foreground highlight :weight 'bold)
    (message-header-to         :foreground highlight :weight 'bold)
    (message-header-cc         :inherit 'message-header-to :foreground (sinolor-themes--darken highlight 0.15))
    (message-header-other      :foreground violet)
    (message-header-newsgroups :foreground yellow)
    (message-header-xheader    :foreground doc-comments)
    (message-separator         :foreground comments)
    (message-mml               :foreground comments :slant 'italic)
    ((message-cited-text   &inherit gnus-cite-1))
    ((message-cited-text-1 &inherit gnus-cite-2))
    ((message-cited-text-2 &inherit gnus-cite-3))
    ((message-cited-text-3 &inherit gnus-cite-4))
    ((message-cited-text-4 &inherit gnus-cite-5))
;;;; multiple cursors
    (mc/cursor-face :inherit 'cursor)
;;;; nav-flash
    (nav-flash-face :background selection :foreground base8 :weight 'bold)
;;;; notmuch
    ;; (notmuch-crypto-decryption               :foreground blue-l)
    ;; (notmuch-crypto-part-header              :foreground yellow-l)
    ;; (notmuch-crypto-signature-bad            :foreground red-l)
    ;; (notmuch-crypto-signature-good           :foreground base1)
    ;; (notmuch-crypto-signature-good-key       :foreground aqua-l)
    ;; (notmuch-crypto-signature-unknown        :foreground yellow)
    ;; (notmuch-hello-logo-background           :foreground fg)
    (notmuch-message-summary-face            :foreground grey)
    (notmuch-search-count                    :foreground comments)
    (notmuch-search-date                     :foreground numbers)
    (notmuch-search-flagged-face             :foreground (sinolor-themes--blend red base4 0.5))
    (notmuch-search-matching-authors         :foreground blue)
    (notmuch-search-non-matching-authors     :foreground fg)
    (notmuch-search-subject                  :foreground fg)
    (notmuch-search-unread-face              :weight 'bold)
    (notmuch-tag-added                       :foreground green :weight 'normal)
    (notmuch-tag-deleted                     :foreground red :weight 'normal)
    (notmuch-tag-face                        :foreground yellow :weight 'normal)
    (notmuch-tag-flagged                     :foreground yellow :weight 'normal)
    (notmuch-tag-unread                      :foreground yellow :weight 'normal)
    (notmuch-tree-match-author-face          :foreground blue :weight 'bold)
    (notmuch-tree-match-date-face            :foreground numbers :weight 'bold)
    (notmuch-tree-match-face                 :foreground fg)
    (notmuch-tree-match-subject-face         :foreground fg)
    (notmuch-tree-match-tag-face             :foreground yellow)
    (notmuch-tree-match-tree-face            :foreground comments)
    (notmuch-tree-no-match-author-face       :foreground blue)
    (notmuch-tree-no-match-date-face         :foreground numbers)
    (notmuch-tree-no-match-face              :foreground base5)
    (notmuch-tree-no-match-subject-face      :foreground base5)
    (notmuch-tree-no-match-tag-face          :foreground yellow)
    (notmuch-tree-no-match-tree-face         :foreground yellow)
    (notmuch-wash-cited-text                 :foreground base4)
    (notmuch-wash-toggle-button :foreground fg)
;;;; orderless
    (orderless-match-face-0 :weight 'bold :foreground (sinolor-themes--blend blue    fg 0.6) :background (sinolor-themes--blend blue    bg 0.1))
    (orderless-match-face-1 :weight 'bold :foreground (sinolor-themes--blend magenta fg 0.6) :background (sinolor-themes--blend magenta bg 0.1))
    (orderless-match-face-2 :weight 'bold :foreground (sinolor-themes--blend green   fg 0.6) :background (sinolor-themes--blend green   bg 0.1))
    (orderless-match-face-3 :weight 'bold :foreground (sinolor-themes--blend yellow  fg 0.6) :background (sinolor-themes--blend yellow  bg 0.1))
;;;; org <built-in> <modes:org-mode>
    (org-archived                 :foreground doc-comments)
    (org-block                    :background base3    :extend t)
    (org-block-background         :background base3    :extend t)
    (org-block-begin-line         :foreground comments :background base3 :extend t)
    (org-block-end-line           :inherit 'org-block-begin-line)
    (org-checkbox                 :inherit 'org-todo)
    (org-checkbox-statistics-done :inherit 'org-done)
    (org-checkbox-statistics-todo :inherit 'org-todo)
    (org-cite                     :foreground (sinolor-themes--blend teal fg 0.9))
    (org-cite-key                 :foreground (sinolor-themes--blend teal fg 0.6) :underline t)
    (org-code                     :inherit 'org-block :foreground orange)
    (org-date                     :foreground yellow)
    (org-default                  :inherit 'variable-pitch)
    (org-document-info            :foreground builtin)
    (org-document-title           :foreground builtin         :weight 'bold)
    (org-done                     :inherit 'org-headline-done :weight 'bold)
    (org-drawer                   :foreground comments)
    (org-ellipsis                 :foreground comments)
    (org-footnote                 :foreground orange)
    (org-formula                  :foreground cyan)
    (org-headline-done            :foreground base5)
    (org-hide                     :foreground bg)
    (org-latex-and-related        :foreground base8           :weight 'bold)
    (org-link                     :inherit 'link              :foreground highlight)
    (org-list-dt                  :foreground highlight)
    (org-meta-line                :foreground doc-comments)
    (org-priority                 :foreground red)
    (org-property-value           :foreground doc-comments)
    (org-quote                    :inherit 'org-block         :slant 'italic :extend t)
    (org-special-keyword          :foreground doc-comments)
    (org-table                    :foreground violet)
    (org-tag                      :foreground doc-comments :weight 'normal)
    (org-todo                     :foreground green :bold 'inherit)
    (org-verbatim                 :foreground green)
    (org-warning                  :foreground warning)
    ;; Omitted because we rely on style they inherit from the
    ;; outline-N faces.
    ;;(org-level-1)
    ;;(org-level-2)
    ;;(org-level-3)
    ;;(org-level-4)
    ;;(org-level-5)
    ;;(org-level-6)
    ;;(org-level-7)
    ;;(org-level-8)
;;;; org-agenda <built-in>
    (org-agenda-done :inherit 'org-done)
    (org-agenda-dimmed-todo-face :foreground comments)
    (org-agenda-date          :foreground violet :weight 'ultra-bold)
    (org-agenda-date-today    :foreground (sinolor-themes--lighten violet 0.4)   :weight 'ultra-bold)
    (org-agenda-date-weekend  :foreground (sinolor-themes--darken violet 0.4)  :weight 'ultra-bold)
    (org-agenda-structure     :foreground fg :weight 'ultra-bold)
    (org-agenda-clocking      :background (sinolor-themes--blend blue bg 0.2))
    (org-upcoming-deadline         :foreground (sinolor-themes--blend fg bg 0.8))
    (org-upcoming-distant-deadline :foreground (sinolor-themes--blend fg bg 0.5))
    (org-scheduled            :foreground fg)
    (org-scheduled-today      :foreground base7)
    (org-scheduled-previously :foreground base8)
    (org-time-grid            :foreground comments)
    (org-sexp-date            :foreground fg)
;;;; org-habit
    (org-habit-clear-face          :weight 'bold :background base4)
    (org-habit-clear-future-face   :weight 'bold :background base3)
    (org-habit-ready-face          :weight 'bold :background (sinolor-themes--blend blue bg-alt 0.5))
    (org-habit-ready-future-face   :weight 'bold :background (sinolor-themes--blend blue bg-alt 0.3))
    (org-habit-alert-face          :weight 'bold :background (sinolor-themes--blend yellow bg-alt 0.5))
    (org-habit-alert-future-face   :weight 'bold :background (sinolor-themes--blend yellow bg-alt 0.3))
    (org-habit-overdue-face        :weight 'bold :background (sinolor-themes--blend red bg-alt 0.5))
    (org-habit-overdue-future-face :weight 'bold :background (sinolor-themes--blend red bg-alt 0.3))
;;;; org-journal <modes:org-journal-mode>
    (org-journal-highlight :foreground highlight)
    (org-journal-calendar-entry-face :foreground magenta :slant 'italic)
    (org-journal-calendar-scheduled-face :foreground red :slant 'italic)
;;;; org-pomodoro
    (org-pomodoro-mode-line :foreground red)
    (org-pomodoro-mode-line-overtime :foreground warning :weight 'bold)
;;;; org-ref
    (org-ref-acronym-face    :foreground violet)
    (org-ref-cite-face       :foreground yellow :weight 'light :underline t)
    (org-ref-glossary-face   :foreground magenta)
    (org-ref-label-face      :foreground blue)
    (org-ref-ref-face        :inherit 'link :foreground teal)
;;;; outline <built-in>
    ;; NOTE org-mode's org-level-N faces inherit these outline-N faces.
    (outline-1 :foreground blue                        :weight 'bold :extend t)
    (outline-2 :foreground magenta                     :weight 'bold :extend t)
    (outline-3 :foreground violet                      :weight 'bold :extend t)
    (outline-4 :foreground (sinolor-themes--lighten blue 0.25)    :weight 'bold :extend t)
    (outline-5 :foreground (sinolor-themes--lighten magenta 0.25) :weight 'bold :extend t)
    (outline-6 :foreground (sinolor-themes--lighten blue 0.5)     :weight 'bold :extend t)
    (outline-7 :foreground (sinolor-themes--lighten magenta 0.5)  :weight 'bold :extend t)
    (outline-8 :foreground (sinolor-themes--lighten blue 0.8)     :weight 'bold :extend t)
;;;; pkgbuild-mode <modes:pkgbuild-mode>
    (pkgbuild-error-face :underline `(:style wave :color ,red))
;;;; popup
    (popup-face           :inherit 'tooltip)
    (popup-tip-face       :inherit 'popup-face :foreground violet :background base0)
    (popup-selection-face :background selection)
;;;; rainbow-delimiters
    (rainbow-delimiters-depth-1-face :foreground blue)
    (rainbow-delimiters-depth-2-face :foreground magenta)
    (rainbow-delimiters-depth-3-face :foreground green)
    (rainbow-delimiters-depth-4-face :foreground orange)
    (rainbow-delimiters-depth-5-face :foreground violet)
    (rainbow-delimiters-depth-6-face :foreground yellow)
    (rainbow-delimiters-depth-7-face :foreground teal)
    (rainbow-delimiters-depth-8-face :foreground cyan)
    (rainbow-delimiters-depth-9-face :foreground grey)
    (rainbow-delimiters-base-error-face :inherit 'rainbow-delimiters-base-face :foreground error)
    (rainbow-delimiters-base-face :inherit 'default)
    (rainbow-delimiters-unmatched-face :foreground red :weight 'bold :inverse-video t)
    (rainbow-delimiters-mismatched-face :inherit 'rainbow-delimiters-unmatched-face)
;;;; re-builder <built-in>
    (reb-match-0 :foreground orange  :inverse-video t)
    (reb-match-1 :foreground magenta :inverse-video t)
    (reb-match-2 :foreground green   :inverse-video t)
    (reb-match-3 :foreground yellow  :inverse-video t)
;;;; rpm-spec-mode <modes:rpm-spec-mode>
    (rpm-spec-macro-face        :foreground yellow)
    (rpm-spec-var-face          :foreground violet)
    (rpm-spec-tag-face          :foreground blue)
    (rpm-spec-obsolete-tag-face :foreground red)
    (rpm-spec-package-face      :foreground orange)
    (rpm-spec-dir-face          :foreground green)
    (rpm-spec-doc-face          :foreground orange)
    (rpm-spec-ghost-face        :foreground comments)
    (rpm-spec-section-face      :foreground magenta)
;;;; rst <built-in> <modes:rst-mode>
    (rst-block :inherit 'font-lock-constant-face)
    (rst-level-1 :inherit 'rst-adornment :weight 'bold)
    (rst-level-2 :inherit 'rst-adornment :weight 'bold)
    (rst-level-3 :inherit 'rst-adornment :weight 'bold)
    (rst-level-4 :inherit 'rst-adornment :weight 'bold)
    (rst-level-5 :inherit 'rst-adornment :weight 'bold)
    (rst-level-6 :inherit 'rst-adornment :weight 'bold)
;;;; sh-script <built-in> <modes:sh-mode,shell-script-mode>
    (sh-heredoc :inherit 'font-lock-string-face :weight 'normal)
    (sh-quoted-exec :inherit 'font-lock-preprocessor-face)
;;;; show-paren <built-in>
    ((show-paren-match &inherit paren-face-match))
    ((show-paren-mismatch &inherit paren-face-mismatch))
;;;; smartparens
    (sp-pair-overlay-face :background region)
    ((sp-show-pair-match-face    &inherit show-paren-match))
    ((sp-show-pair-mismatch-face &inherit show-paren-mismatch))
;;;; smerge-tool
    (smerge-lower   :background (sinolor-themes--blend green bg 0.2))
    (smerge-upper   :background (sinolor-themes--blend red base3 0.2))
    (smerge-base    :background (sinolor-themes--blend blue bg 0.2))
    (smerge-markers :background comments :foreground bg :distant-foreground fg :weight 'bold)
    (smerge-refined-added   :inherit 'diff-added :inverse-video t)
    (smerge-refined-removed :inherit 'diff-removed :inverse-video t)
;;;; stripe-buffer
    (stripe-highlight
     (&light :background base5)
     (&dark  :background base3))
;;;; symbol-overlay
    (symbol-overlay-default-face
     (&dark  :background (sinolor-themes--lighten region 0.1) :distant-foreground fg-alt)
     (&light :background (sinolor-themes--darken region 0.1)  :distant-foreground fg-alt))
    (symbol-overlay-face-1 :background (sinolor-themes--blend blue bg 0.4)    :distant-foreground fg-alt)
    (symbol-overlay-face-2 :background (sinolor-themes--blend violet bg 0.4)  :distant-foreground fg-alt)
    (symbol-overlay-face-3 :background (sinolor-themes--blend yellow bg 0.3)  :distant-foreground fg-alt)
    (symbol-overlay-face-4 :background (sinolor-themes--blend orange bg 0.3)  :distant-foreground fg-alt)
    (symbol-overlay-face-5 :background (sinolor-themes--blend red bg 0.3)     :distant-foreground fg-alt)
    (symbol-overlay-face-6 :background (sinolor-themes--blend magenta bg 0.3) :distant-foreground fg-alt)
    (symbol-overlay-face-7 :background (sinolor-themes--blend green bg 0.4)   :distant-foreground fg-alt)
    (symbol-overlay-face-8 :background (sinolor-themes--blend cyan bg 0.2)    :distant-foreground fg-alt)
;;;; term <built-in>
    (term               :foreground fg)
    (term-bold          :weight 'bold)
    (term-color-black   :background base0   :foreground base0)
    (term-color-red     :background red     :foreground red)
    (term-color-green   :background green   :foreground green)
    (term-color-yellow  :background yellow  :foreground yellow)
    (term-color-blue    :background blue    :foreground blue)
    (term-color-magenta :background magenta :foreground magenta)
    (term-color-cyan    :background cyan    :foreground cyan)
    (term-color-white   :background base8   :foreground base8)
;;;; vertico
    (vertico-current :background region :distant-foreground 'unspecified :extend t)
;;;; vertico-posframe
    ;;(vertico-posframe :inherit 'default)
    (vertico-posframe-border :background grey)
    (vertico-posframe-border-2 :background red)
    (vertico-posframe-border-3 :background green)
    (vertico-posframe-border-4 :background blue)
    (vertico-posframe-border-fallback :background yellow)
;;;; vterm
    (vterm-color-black   :background (sinolor-themes--lighten base0 0.25)   :foreground base0)
    (vterm-color-red     :background (sinolor-themes--lighten red 0.25)     :foreground red)
    (vterm-color-green   :background (sinolor-themes--lighten green 0.25)   :foreground green)
    (vterm-color-yellow  :background (sinolor-themes--lighten yellow 0.25)  :foreground yellow)
    (vterm-color-blue    :background (sinolor-themes--lighten blue 0.25)    :foreground blue)
    (vterm-color-magenta :background (sinolor-themes--lighten magenta 0.25) :foreground magenta)
    (vterm-color-cyan    :background (sinolor-themes--lighten cyan 0.25)    :foreground cyan)
    (vterm-color-white   :background (sinolor-themes--lighten base8 0.25)   :foreground base8)
;;;; web-mode <modes:web-mode>
    (web-mode-block-control-face     :foreground builtin)
    (web-mode-block-delimiter-face   :foreground builtin)
    (web-mode-css-property-name-face :foreground type)
    (web-mode-doctype-face           :foreground comments)
    (web-mode-html-tag-face          :foreground methods)
    (web-mode-html-tag-bracket-face  :foreground methods)
    (web-mode-html-attr-name-face    :foreground type)
    (web-mode-html-attr-value-face   :foreground strings)
    (web-mode-html-entity-face       :foreground cyan :inherit 'italic)
    (web-mode-block-control-face     :foreground orange)
    (web-mode-html-tag-bracket-face  :foreground operators)
    (web-mode-json-key-face          :foreground strings)
    (web-mode-json-context-face      :foreground strings)
    (web-mode-keyword-face           :foreground keywords)
    (web-mode-string-face            :foreground strings)
    (web-mode-type-face              :foreground type)
;;;; wgrep <built-in>
    (wgrep-face :weight 'bold :foreground green :background base5)
    (wgrep-delete-face :foreground base3 :background red)
    (wgrep-done-face   :foreground blue)
    (wgrep-file-face   :foreground comments)
    (wgrep-reject-face :foreground red :weight 'bold)
;;;; which-func <built-in>
    (which-func :foreground blue)
    ;;;; which-key
    (which-key-key-face                   :foreground green)
    (which-key-group-description-face     :foreground violet)
    (which-key-command-description-face   :foreground blue)
    (which-key-local-map-description-face :foreground magenta)
;;;; whitespace <built-in>
    (whitespace-empty    :background base3)
    (whitespace-space    :foreground base4)
    (whitespace-newline  :foreground base4)
    (whitespace-tab
     :foreground base4
     :background (if (default-value 'indent-tabs-mode) 'unspecified base3))
    (whitespace-indentation
     :foreground base4
     :background (if (default-value 'indent-tabs-mode) base3 'unspecified))
    (whitespace-trailing :inherit 'trailing-whitespace)
    (whitespace-line     :background base0 :foreground red :weight 'bold)
;;;; widget
    (widget-button-pressed :foreground red)
    (widget-documentation  :foreground green)
    (widget-single-line-field :background base3 :distant-foreground bg)
    (widget-field :background base3 :distant-foreground bg
                  :box `(:line-width -1 :color ,grey) :extend t)
;;;; woman <built-in>
    (woman-bold   :inherit 'Man-overstrike)
    (woman-italic :inherit 'Man-underline)
;;;; yasnippet
    (yas-field-highlight-face :inherit 'match))
  "Base faces.")

;;;; Package variables.
(defvar sinolor-themes--base-vars
  '(
;;;; pdf-tools
    (pdf-view-midnight-colors `(cons ,(sinolor-themes--color 'fg) ,(sinolor-themes--color 'bg)))
;;;; vc <built-in>
    (vc-annotate-color-map
     `(list (cons 20  ,(sinolor-themes--color 'green))
            (cons 40  ,(sinolor-themes--blend 'yellow 'green (/ 1.0 3)))
            (cons 60  ,(sinolor-themes--blend 'yellow 'green (/ 2.0 3)))
            (cons 80  ,(sinolor-themes--color 'yellow))
            (cons 100 ,(sinolor-themes--blend 'orange 'yellow (/ 1.0 3)))
            (cons 120 ,(sinolor-themes--blend 'orange 'yellow (/ 2.0 3)))
            (cons 140 ,(sinolor-themes--color 'orange))
            (cons 160 ,(sinolor-themes--blend 'magenta 'orange (/ 1.0 3)))
            (cons 180 ,(sinolor-themes--blend 'magenta 'orange (/ 2.0 3)))
            (cons 200 ,(sinolor-themes--color 'magenta))
            (cons 220 ,(sinolor-themes--blend 'red 'magenta (/ 1.0 3)))
            (cons 240 ,(sinolor-themes--blend 'red 'magenta (/ 2.0 3)))
            (cons 260 ,(sinolor-themes--color 'red))
            (cons 280 ,(sinolor-themes--blend 'grey 'red (/ 1.0 4)))
            (cons 300 ,(sinolor-themes--blend 'grey 'red (/ 2.0 4)))
            (cons 320 ,(sinolor-themes--blend 'grey 'red (/ 3.0 4)))
            (cons 340 ,(sinolor-themes--color 'base5))
            (cons 360 ,(sinolor-themes--color 'base5))))
    (vc-annotate-very-old-color 'unspecified)
    (vc-annotate-background (sinolor-themes--color 'bg)))
  "Base variables.")

(provide 'sinolor-themes-base)

;;; sinolor-themes-base.el ends here
